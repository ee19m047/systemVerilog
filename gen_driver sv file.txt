// Code your testbench here
// or browse Examples

class transaction;
  randc bit [3:0] a;
  randc bit [3:0] b;
  
endclass

class generator;
  transaction t;
  mailbox mbx;
  integer i;
  event done;
  
  function new(mailbox mbx);
    this.mbx = mbx;
  endfunction
  
  task main();
    
    for(i = 0; i< 10;i++)
      begin
        t = new();
        t.randomize(t);
        mbx.put(t);
        $display("[GEN]: Data sent to driver: %0d and %0d", t.a,t.b);
        
        -> done;
        #1;
      end
  endtask
endclass


class driver;
  transaction t;
  mailbox mbx;
  
  function new(mailbox mbx);
    this.mbx = mbx;
  endfunction
  
  task main();
    forever begin
      t = new();
      mbx.get(t);
      $display("[DIV]: Data received from generator: %0d and %0d",t.a,t.b);
      #1;
    end
  endtask
endclass


module tb();
  transaction t;
  generator gen;
  driver drv;
  mailbox mbx;
  
  initial begin
    t = new();
    gen = new(mbx);
    drv = new(mbx);
    mbx = new();
    
    fork
      gen.main();
      drv.main();
    join_any
    wait(gen.done.triggered);
  end
endmodule